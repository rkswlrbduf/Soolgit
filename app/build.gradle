apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "org.jetbrains.kotlin.android.extensions"
apply plugin: 'io.fabric'

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.2'

    //File 불러오기
    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0
        def runTasks = gradle.startParameter.taskNames
        println("OKKKKKK"+runTasks+"LLLL")
        if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1
        }

        def versionMajor = 0
        def versionMinor = 0
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value

        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        def versionNumber = versionProps['VERSION_NUMBER'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_NUMBER'] = versionNumber.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "blackstone.com.soolgit"
            minSdkVersion 19
            targetSdkVersion 28
            versionCode versionNumber
            versionName "${versionMajor}.${versionMinor}.${versionPatch} (${versionBuild}) Release"
            generatedDensities = []
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            multiDexEnabled true
        }

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def fileNaming = "apk/RELEASES"
                if (outputFileName != null && outputFileName.endsWith('.apk')) {
                    outputFileName = new File("./release/", "${fileNaming}-${versionMajor}.${versionMinor}.${versionPatch}-${outputFileName}")
                }
            }
        }

    } else {
        throw new GradleException("Could not read version.properties.properties!")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-alpha2'
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.firebase:firebase-auth:16.0.4'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:support-core-ui:28.0.0'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:customtabs:28.0.0'
    implementation project(path: ':naveridlogin_android_sdk_4.2.0')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    /**
     * Firebase Core
     */
    implementation 'com.google.firebase:firebase-core:16.0.7'

    /**
     * Firebase Crashlytics
     */
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'

    /**
     * Ted Permission
     */
    implementation 'gun0912.ted:tedpermission:2.2.2'

    /**
     * Glide
     */
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    /**
     * Kakao
     */
    implementation 'com.kakao.sdk:usermgmt:1.16.0'
    implementation 'com.kakao.sdk:plusfriend:1.16.0'

    /**
     * LeakCanary
     */

    /*debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
        releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
        // Optional, if you use support library fragments:
        debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.2'*/

    /**
     * DotIndicator
     */
    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:3.0.3'

    /**
     * aws 기본 세팅
     */
    implementation('com.amazonaws:aws-android-sdk-mobile-client:2.7.+@aar') { transitive = true }

    /**
     * Retrofit2 - Server Conn
     */
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    /**
     * OKHTTP3 - Server Conn
     */
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'

    /**
     * TypeKit - Font
     */

    /*
        implementation 'com.github.katoro:typekit:1.0.1'*/

    /**
     * FlycoTab - Tablayout
     */
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    /**
     * SpinKit - ProgressBar Loader
     */
    implementation 'com.github.ybq:Android-SpinKit:1.2.0'

    /**
     * CircleImageView
     */
    implementation 'de.hdodenhof:circleimageview:2.2.0'

    /**
     * Calligraphy
     */
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    //implementation 'io.github.inflationx:viewpump:1.0.0'

    /**
     * Recyclerview Adapter Helper
     */
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.21'

    /**
     * Google Maps Location
     */
    implementation 'com.google.android.gms:play-services-location:16.0.0'

    /**
     * Event Bus - Otto
     */
    implementation 'com.squareup:otto:1.3.8'

    /**
     * SnapHelper
     */
    implementation 'com.github.rubensousa:gravitysnaphelper-compat:2.0'

    /**
     *
     */
    implementation 'com.flipboard:bottomsheet-core:1.5.3'

    /**
     * MultiDex
     */
    implementation 'com.android.support:multidex:1.0.3'

    /**
     * Loading Progress
     */
    implementation 'com.victor:lib:1.0.4'

    /**
     * Tag Group
     */
    implementation 'me.gujun.android.taggroup:library:1.4@aar'

    /**
     * Toggle
     */
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'

    /**
     * Expandable Layout
     */
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'

    /**
     * QBadge
     */
    implementation 'q.rorbin:badgeview:1.1.3'
}
apply plugin: 'com.google.gms.google-services'
